bootstrap-servers: localhost:9092
kafka.bootstrapAddress=localhost:9092
group-id: palindrome
message.topic.name=palindrome
auto-offset-reset: earliest
spring.application.name=palindrome-service
spring.cloud.config.fail-fast=false
spring.cloud.config.enabled=false
spring.cloud.config.uri=["http://localhost:8888"]
management.metrics.export.influx.enabled=false
management.health.influxdb.enabled=false
kafka.brokers=localhost:9093
kafka.topic.name=palindrome
kafka.autoCreateTopics=true
kafka.autoAddPartitions=true
kafka.minPartitionCount=1
output.destination=palindrome
input.destination=palindrome

datasource.url=jdbc:postgresql://0.0.0.0:5432/palindrome
datasource.username=rw_dev
datasource.password=rw_dev
datasource.platform=postgres
datasource.initialization-mode=always
datasource.schema=classpath:/db.migration/V1.1__create_palindrome_data_table.sql
datasource.continue-on-error=true
jpa.database-platform= = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
jpa.database=POSTGRESQL
jpa.hibernate.ddl-auto=none
jpa.show-sql=true
jpa.generate-ddl=false
jpa.properties.hibernate.jdbc.lob.non_contextual_creation=false
spring.jpa.properties.hibernate.id.new_generator_mappings = true;